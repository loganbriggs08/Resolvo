{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbriggs/Desktop/Projects/Resolvo/src/lib/mdx.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\n\nexport interface Project {\n  slug: string;\n  frontmatter: {\n    name: string;\n    image: string;\n    description: string;\n    featured?: boolean;\n    date: string;\n    client: string;\n    technologies: string[];\n    duration: string;\n    role: string;\n    challenge: string;\n    solution: string;\n  };\n  content?: string;\n}\n\nexport function getProjects(): Project[] {\n  const postsDirectory = path.join(process.cwd(), 'src', 'previous-work');\n  const filenames = fs.readdirSync(postsDirectory);\n\n  const projects = filenames.map((filename) => {\n    const filePath = path.join(postsDirectory, filename);\n    const fileContents = fs.readFileSync(filePath, 'utf8');\n    const { data, content } = matter(fileContents);\n\n    return {\n      slug: filename.replace(/\\.mdx$/, ''),\n      frontmatter: data as Project['frontmatter'],\n      content,\n    };\n  });\n\n  return projects.sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());\n}\n\nexport function getFeaturedProjects(): Project[] {\n  const allProjects = getProjects();\n  const featuredProjects = allProjects.filter(project => project.frontmatter.featured);\n  return featuredProjects.slice(0, 2); // Return a maximum of two featured projects\n}\n\nexport function getProjectBySlug(slug: string): Project | undefined {\n  const filePath = path.join(process.cwd(), 'src', 'previous-work', `${slug}.mdx`);\n  if (!fs.existsSync(filePath)) {\n    return undefined;\n  }\n  const fileContents = fs.readFileSync(filePath, 'utf8');\n  const { content, data } = matter(fileContents);\n  return {\n    slug,\n    frontmatter: data as Project['frontmatter'],\n    content,\n  };\n} "],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAoBO,SAAS;IACd,MAAM,iBAAiB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO;IACvD,MAAM,YAAY,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IAEjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,gBAAgB;QAC3C,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;QAEjC,OAAO;YACL,MAAM,SAAS,OAAO,CAAC,UAAU;YACjC,aAAa;YACb;QACF;IACF;IAEA,OAAO,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,OAAO;AAC9G;AAEO,SAAS;IACd,MAAM,cAAc;IACpB,MAAM,mBAAmB,YAAY,MAAM,CAAC,CAAA,UAAW,QAAQ,WAAW,CAAC,QAAQ;IACnF,OAAO,iBAAiB,KAAK,CAAC,GAAG,IAAI,4CAA4C;AACnF;AAEO,SAAS,iBAAiB,IAAY;IAC3C,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,iBAAiB,GAAG,KAAK,IAAI,CAAC;IAC/E,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;QAC5B,OAAO;IACT;IACA,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IAC/C,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;IACjC,OAAO;QACL;QACA,aAAa;QACb;IACF;AACF","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/loganbriggs/Desktop/Projects/Resolvo/src/app/work/%5Bslug%5D/page.tsx"],"sourcesContent":["import { MDXRemote } from 'next-mdx-remote/rsc';\nimport { getProjectBySlug, getProjects, Project } from \"../../../../src/lib/mdx\";\nimport { notFound } from 'next/navigation';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\ninterface ProjectPageProps {\n  params: { slug: string };\n}\n\n// Helper to extract headings from MDX content (simple regex for ## and ###)\nfunction extractHeadings(content: string | undefined) {\n  if (!content) return [];\n  const headingRegex = /^##+\\s+(.+)$/gm;\n  const headings = [];\n  let match;\n  while ((match = headingRegex.exec(content)) !== null) {\n    headings.push(match[1]);\n  }\n  return headings;\n}\n\nexport async function generateStaticParams() {\n  const projects = getProjects();\n  return projects.map((project) => ({\n    slug: project.slug,\n  }));\n}\n\nexport default async function ProjectPage({ params }: ProjectPageProps) {\n  const { slug } = params;\n  const project = getProjectBySlug(slug);\n\n  if (!project) {\n    notFound();\n  }\n\n  const { tags } = project.frontmatter as { tags?: string[] };\n  const headings = extractHeadings(project.content);\n\n  return (\n    <main className=\"min-h-screen flex flex-col md:flex-row max-w-7xl mx-auto px-4 pt-16 pb-16 gap-12\">\n      {/* Sidebar */}\n      <aside className=\"hidden md:flex flex-col w-72 pr-8 text-[var(--secondary-text-red)]\">\n        {tags && tags.length > 0 && (\n          <div className=\"mb-10\">\n            <div className=\"uppercase text-xs font-semibold tracking-wider mb-2 text-gray-400\">Tags</div>\n            <div className=\"flex flex-wrap gap-2\">\n              {tags.map((tag: string, idx: number) => (\n                <span key={idx} className=\"px-3 py-1 rounded bg-[var(--off-white)] text-[var(--foreground)] text-xs font-medium\">\n                  {tag}\n                </span>\n              ))}\n            </div>\n          </div>\n        )}\n        {headings.length > 0 && (\n          <div>\n            <div className=\"uppercase text-xs font-semibold tracking-wider mb-2 text-gray-400\">Table of Contents</div>\n            <ul className=\"space-y-2 pl-2 border-l border-[var(--divider-color)]\">\n              {headings.map((heading, idx) => (\n                <li key={idx}>\n                  <a \n                    href={`#${heading.replace(/\\s+/g, '-').toLowerCase()}`}\n                    className=\"text-[var(--foreground)] text-sm font-normal hover:text-[var(--primary-red)] hover:underline transition-colors\"\n                  >\n                    {heading}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <Link href=\"/work\" className=\"secondary-button mt-8 w-full text-center flex items-center justify-center gap-2\">\n          <span className=\"inline-block w-5 h-5 align-middle\">\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M19 12H5M5 12L12 19M5 12L12 5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </span>\n          <span>Previous Work</span>\n        </Link>\n        <div className=\"flex-1\" />\n      </aside>\n      {/* Main Content */}\n      <section className=\"flex-1 min-w-0\">\n        <div className=\"mb-2 text-gray-400 text-sm\">By Logan Briggs</div>\n        <h1 className=\"text-3xl font-semibold mb-4 text-[var(--foreground)] leading-tight\">{project.frontmatter.name}</h1>\n        <p className=\"text-base text-gray-500 mb-8\">{project.frontmatter.description}</p>\n        <div className=\"w-full flex justify-center mb-12\">\n          <Image\n            src={project.frontmatter.image}\n            alt={project.frontmatter.name}\n            width={900}\n            height={500}\n            className=\"rounded-xl w-full h-auto object-contain bg-[var(--secondary-background)]\"\n            priority\n          />\n        </div>\n        <article className=\"prose lg:prose-xl mx-auto prose-invert\">\n          {project.content && <MDXRemote source={project.content} />}\n        </article>\n      </section>\n    </main>\n  );\n} "],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;AAMA,4EAA4E;AAC5E,SAAS,gBAAgB,OAA2B;IAClD,IAAI,CAAC,SAAS,OAAO,EAAE;IACvB,MAAM,eAAe;IACrB,MAAM,WAAW,EAAE;IACnB,IAAI;IACJ,MAAO,CAAC,QAAQ,aAAa,IAAI,CAAC,QAAQ,MAAM,KAAM;QACpD,SAAS,IAAI,CAAC,KAAK,CAAC,EAAE;IACxB;IACA,OAAO;AACT;AAEO,eAAe;IACpB,MAAM,WAAW,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD;IAC3B,OAAO,SAAS,GAAG,CAAC,CAAC,UAAY,CAAC;YAChC,MAAM,QAAQ,IAAI;QACpB,CAAC;AACH;AAEe,eAAe,YAAY,EAAE,MAAM,EAAoB;IACpE,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,UAAU,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD,EAAE;IAEjC,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,WAAW;IACpC,MAAM,WAAW,gBAAgB,QAAQ,OAAO;IAEhD,qBACE,8OAAC;QAAK,WAAU;;0BAEd,8OAAC;gBAAM,WAAU;;oBACd,QAAQ,KAAK,MAAM,GAAG,mBACrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAoE;;;;;;0CACnF,8OAAC;gCAAI,WAAU;0CACZ,KAAK,GAAG,CAAC,CAAC,KAAa,oBACtB,8OAAC;wCAAe,WAAU;kDACvB;uCADQ;;;;;;;;;;;;;;;;oBAOlB,SAAS,MAAM,GAAG,mBACjB,8OAAC;;0CACC,8OAAC;gCAAI,WAAU;0CAAoE;;;;;;0CACnF,8OAAC;gCAAG,WAAU;0CACX,SAAS,GAAG,CAAC,CAAC,SAAS,oBACtB,8OAAC;kDACC,cAAA,8OAAC;4CACC,MAAM,CAAC,CAAC,EAAE,QAAQ,OAAO,CAAC,QAAQ,KAAK,WAAW,IAAI;4CACtD,WAAU;sDAET;;;;;;uCALI;;;;;;;;;;;;;;;;kCAYjB,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAQ,WAAU;;0CAC3B,8OAAC;gCAAK,WAAU;0CACd,cAAA,8OAAC;oCAAI,OAAM;oCAAO,QAAO;oCAAO,SAAQ;oCAAY,MAAK;oCAAO,OAAM;8CACpE,cAAA,8OAAC;wCAAK,GAAE;wCAAgC,QAAO;wCAAe,aAAY;wCAAI,eAAc;wCAAQ,gBAAe;;;;;;;;;;;;;;;;0CAGvH,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC;wBAAI,WAAU;;;;;;;;;;;;0BAGjB,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAI,WAAU;kCAA6B;;;;;;kCAC5C,8OAAC;wBAAG,WAAU;kCAAsE,QAAQ,WAAW,CAAC,IAAI;;;;;;kCAC5G,8OAAC;wBAAE,WAAU;kCAAgC,QAAQ,WAAW,CAAC,WAAW;;;;;;kCAC5E,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,QAAQ,WAAW,CAAC,KAAK;4BAC9B,KAAK,QAAQ,WAAW,CAAC,IAAI;4BAC7B,OAAO;4BACP,QAAQ;4BACR,WAAU;4BACV,QAAQ;;;;;;;;;;;kCAGZ,8OAAC;wBAAQ,WAAU;kCAChB,QAAQ,OAAO,kBAAI,8OAAC,wJAAA,CAAA,YAAS;4BAAC,QAAQ,QAAQ,OAAO;;;;;;;;;;;;;;;;;;;;;;;AAKhE","debugId":null}}]
}